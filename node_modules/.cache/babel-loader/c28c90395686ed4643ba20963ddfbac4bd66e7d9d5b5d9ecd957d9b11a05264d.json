{"ast":null,"code":"var f = Object.defineProperty,\n  p = Object.defineProperties;\nvar s = Object.getOwnPropertyDescriptors;\nvar e = Object.getOwnPropertySymbols;\nvar c = Object.prototype.hasOwnProperty,\n  R = Object.prototype.propertyIsEnumerable;\nvar r = (m, t, o) => t in m ? f(m, t, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: o\n  }) : m[t] = o,\n  i = (m, t) => {\n    for (var o in t || (t = {})) c.call(t, o) && r(m, o, t[o]);\n    if (e) for (var o of e(t)) R.call(t, o) && r(m, o, t[o]);\n    return m;\n  },\n  a = (m, t) => p(m, s(t));\nimport d, { forwardRef as l } from \"react\";\nimport n from \"../lib/SSRBase.mjs\";\nimport w from \"../defs/GitCommit.mjs\";\nconst C = l((m, t) => /* @__PURE__ */d.createElement(n, a(i({\n  ref: t\n}, m), {\n  weights: w\n})));\nC.displayName = \"GitCommit\";\nexport { C as GitCommit };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}