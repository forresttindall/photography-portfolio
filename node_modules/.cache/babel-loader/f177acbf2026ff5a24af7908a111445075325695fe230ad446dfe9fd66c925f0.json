{"ast":null,"code":"var f = Object.defineProperty,\n  i = Object.defineProperties;\nvar p = Object.getOwnPropertyDescriptors;\nvar o = Object.getOwnPropertySymbols;\nvar s = Object.prototype.hasOwnProperty,\n  u = Object.prototype.propertyIsEnumerable;\nvar m = (r, e, t) => e in r ? f(r, e, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: t\n  }) : r[e] = t,\n  a = (r, e) => {\n    for (var t in e || (e = {})) s.call(e, t) && m(r, t, e[t]);\n    if (o) for (var t of o(e)) u.call(e, t) && m(r, t, e[t]);\n    return r;\n  },\n  c = (r, e) => i(r, p(e));\nimport S, { forwardRef as R } from \"react\";\nimport d from \"../lib/SSRBase.mjs\";\nimport l from \"../defs/TreeStructure.mjs\";\nconst n = R((r, e) => /* @__PURE__ */S.createElement(d, c(a({\n  ref: e\n}, r), {\n  weights: l\n})));\nn.displayName = \"TreeStructure\";\nexport { n as TreeStructure };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}